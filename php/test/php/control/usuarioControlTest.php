<?php

require_once 'PHPUnit/Framework.php';
require_once dirname(__FILE__) . '/../Contenedor.php';
require_once dirname(__FILE__) . '/../../../control/usuarioControl.php';

/**
 * Test class for usuarioControl.
 * Generated by PHPUnit on 2011-03-04 at 17:47:27.
 */
class usuarioControlTest extends PHPUnit_Framework_TestCase {

    /**
     * @var usuarioControl
     */
    private $uControl;
    private $Contenedor;
    private $pService;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->pService = $this->getMock('Service', array('cogerUsuario'));
        $this->Contenedor = $this->getMock('Contenedor', array('get', 'server', 'post', 'sesion', 'service'));
        $this->Contenedor->expects($this->any())
                ->method('sesion')
                ->will($this->returnValue('foo'));
        $this->Contenedor->expects($this->any())
                ->method('post')
                ->will($this->returnCallback(array($this, 'expectativasPostLogin')));
        $this->Contenedor->expects($this->any())
                ->method('service')
                ->will($this->returnValue($this->pService));

        $this->pService->expects($this->any())
                ->method('cogerUsuario')
                ->with($this->returnCallback(array($this, 'expectativasCogerUsuario')));

        $this->uControl = new usuarioControl($this->Contenedor);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    public function expectativasCogerUsuario() {
        $args = func_get_args();
        $a[]= array('usuario' => 'usuarioPtuit', 'pass' => 'passPtuit');
        switch ($args[0]) {
            case 'usuarioPtuit':
                return $a;
                break;
            default:
                return NULL;
                break;
        }


    }

    public function expectativasPostLogin() {
        $args = func_get_args();
        switch ($args[0]) {
            case 'usuario':
                return 'usuarioPtuit';
                break;
            case 'pass':
                return 'passPtuit';
            default:
                return NULL;
                break;
        }
    }

    public function testLogin() {

        $datos = $this->uControl->login();
        $this->assertEquals('json', $datos['pagina']);
    }

    /**
     * @todo Implement testCrearUsuario().
     */
    public function testCrearUsuario() {
        
    }

}

?>
